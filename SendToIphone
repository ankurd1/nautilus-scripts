#!/usr/bin/python

#TODO input ip from user
#FIXME dialog titles
#FIXME dont wait for user to press OK in case of multiple files

import os
import paramiko
from subprocess import call, Popen, PIPE
import sys
from time import time
from ConfigParser import ConfigParser


def zenity_info(msg):
    call(['zenity', '--info', '--text', msg])


def zenity_error(msg):
    call(['zenity', '--error', '--text', msg])


zenity_progress = None


def update_zenity_progress(bytes_trans, bytes_total):
    if zenity_progress is None:
        return
    else:
        zenity_progress.stdin.write(str((bytes_trans * 100) / bytes_total) +
                '\n')


def zenity_progress_init():
    return Popen(['zenity', '--progress', '--auto-kill', '--auto-close'],
            stdin=PIPE)


#read config file
config = ConfigParser({'username': 'root',
'password': 'alpine',
'device_ip': '192.168.1',
'device_ip_start': '1',
'device_ip_end': '5',
'device_dir': '/var/mobile/Documents/Installous/Downloads/'})

config.read('/home/' + os.environ['USERNAME'] +
'/.gnome2/nautilus-scripts/SendToIphone.cfg')

device_ip = config.get('main', 'device_ip')
username = config.get('main', 'username')
password = config.get('main', 'password')
device_dir = config.get('main', 'device_dir')
device_ip_start = config.getint('main', 'device_ip_start')
device_ip_end = config.getint('main', 'device_ip_end')

files = sys.argv[1:]

ssh = paramiko.SSHClient()
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())

if (len(device_ip.split('.')) == 4):
    try:
        ssh.connect(device_ip, username=username, password=password)
    except Exception, e:
        zenity_error("Could not connect!")
        sys.exit(-1)
else:
    ip_suff = device_ip_start
    while True:
        try:
            ssh.connect(device_ip + "." + str(ip_suff), username=username,
                    password=password)
            break
        except Exception, e:
            if ip_suff == device_ip_end:
                zenity_error("Could not connect!")
                sys.exit(-1)
            else:
                ip_suff += 1

sftp = ssh.open_sftp()

for fil in files:
    fil_name = fil.split('/')[-1]
    try:
        zenity_progress = zenity_progress_init()
        start_time = time()
        sftp.put(fil, device_dir + fil_name,
                callback=update_zenity_progress)
        time_taken = time() - start_time
        file_size = os.stat(fil).st_size
        avg_speed = (file_size / time_taken) / 1024     # KB/s
    except Exception, e:
        zenity_error(str(e))

    zenity_info('Successfully uploaded {0} at avg of {1:.2f}KBps.'.
            format(fil_name, avg_speed))

sftp.close()
